/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gourmentpizzas;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class ExistingCustomerForm extends javax.swing.JFrame {

    /**
     * Creates new form ExistingCustomerForm
     */
    public ExistingCustomerForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        existingNameTextField = new javax.swing.JTextField();
        existingAddressTextField = new javax.swing.JTextField();
        existingMobileNumTextField = new javax.swing.JTextField();
        existingNameLabel = new javax.swing.JLabel();
        existingStreetAddresLabel = new javax.swing.JLabel();
        existingPostCodeLabel = new javax.swing.JLabel();
        existingMobileNumLabel = new javax.swing.JLabel();
        existingPostCodeTextField = new javax.swing.JTextField();
        sizeLabel = new javax.swing.JLabel();
        sizeComboBox = new javax.swing.JComboBox<>();
        pizzaTypeLabel = new javax.swing.JLabel();
        pizzaTypeComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        sizeTable = new javax.swing.JTable();
        noteLabel = new javax.swing.JLabel();
        sauceRadioButton = new javax.swing.JRadioButton();
        bbqSauceLabel = new javax.swing.JLabel();
        extraCheeseLabel = new javax.swing.JLabel();
        cheeseRadioButton = new javax.swing.JRadioButton();
        additionalFillingsLabel = new javax.swing.JLabel();
        beefCheckBox = new javax.swing.JCheckBox();
        chickenCheckBox = new javax.swing.JCheckBox();
        pepperoniCheckBox = new javax.swing.JCheckBox();
        mushroomsCheckBox = new javax.swing.JCheckBox();
        sweetCornCheckBox = new javax.swing.JCheckBox();
        peppersCheckBox = new javax.swing.JCheckBox();
        chiliCheckBox = new javax.swing.JCheckBox();
        specialComboLabel = new javax.swing.JLabel();
        meatFeastCheckBox = new javax.swing.JCheckBox();
        veggieSpecialCheckBox = new javax.swing.JCheckBox();
        loadButton = new javax.swing.JButton();
        sumLabel = new javax.swing.JLabel();
        sumTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        existingNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingNameTextFieldActionPerformed(evt);
            }
        });

        existingNameLabel.setText("Name:");

        existingStreetAddresLabel.setText("Street Address:");

        existingPostCodeLabel.setText("Post Code:");

        existingMobileNumLabel.setText("Mobile Number:");

        existingPostCodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingPostCodeTextFieldActionPerformed(evt);
            }
        });

        sizeLabel.setText("Size:");

        sizeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Small", "Medium", "Large" }));
        sizeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeComboBoxActionPerformed(evt);
            }
        });

        pizzaTypeLabel.setText("Type");

        pizzaTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thin Crust", "Deep Pan" }));
        pizzaTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pizzaTypeComboBoxActionPerformed(evt);
            }
        });

        sizeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Small (9 inch)", "£3.99", "£5.49"},
                {"Medium (12 inch)", "£5.99", "£7.99"},
                {"Large (15 inch)", "£8.99 ", "£11.99"}
            },
            new String [] {
                "Description", "Thin Crust", "Deep Pan"
            }
        ));
        jScrollPane1.setViewportView(sizeTable);

        noteLabel.setText("Note: Pizzas come with tomato sauce and cheese as standard");

        sauceRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sauceRadioButtonActionPerformed(evt);
            }
        });

        bbqSauceLabel.setText("Please select if you want to replace tomato sauce with barbecue sauce (+50p) ");

        extraCheeseLabel.setText("Extra cheese (+50p)");

        cheeseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheeseRadioButtonActionPerformed(evt);
            }
        });

        additionalFillingsLabel.setText("Additional Fillings (+50p each)");

        beefCheckBox.setText("Beef");
        beefCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beefCheckBoxActionPerformed(evt);
            }
        });

        chickenCheckBox.setText("Chicken");
        chickenCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickenCheckBoxActionPerformed(evt);
            }
        });

        pepperoniCheckBox.setText("Pepperoni");
        pepperoniCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pepperoniCheckBoxActionPerformed(evt);
            }
        });

        mushroomsCheckBox.setText("Mushrooms");
        mushroomsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mushroomsCheckBoxActionPerformed(evt);
            }
        });

        sweetCornCheckBox.setText("Sweetcorn");
        sweetCornCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sweetCornCheckBoxActionPerformed(evt);
            }
        });

        peppersCheckBox.setText("Peppers");
        peppersCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peppersCheckBoxActionPerformed(evt);
            }
        });

        chiliCheckBox.setText("Chili");
        chiliCheckBox.setToolTipText("");
        chiliCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiliCheckBoxActionPerformed(evt);
            }
        });

        specialComboLabel.setText("Special Combinations (+£1)");

        meatFeastCheckBox.setText("Meat feast: beef, chicken, pepperoni");
        meatFeastCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meatFeastCheckBoxActionPerformed(evt);
            }
        });

        veggieSpecialCheckBox.setText("Veggie special: mushroom, sweetcorn, peppers");
        veggieSpecialCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                veggieSpecialCheckBoxActionPerformed(evt);
            }
        });

        loadButton.setText("Load");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        sumLabel.setText("Sum:");

        sumTextField.setText("    ");
        sumTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noteLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bbqSauceLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sauceRadioButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(extraCheeseLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cheeseRadioButton))
                            .addComponent(peppersCheckBox)
                            .addComponent(sweetCornCheckBox)
                            .addComponent(mushroomsCheckBox)
                            .addComponent(pepperoniCheckBox)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(additionalFillingsLabel)
                                    .addComponent(beefCheckBox)
                                    .addComponent(chickenCheckBox))
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(specialComboLabel)
                                    .addComponent(meatFeastCheckBox)
                                    .addComponent(veggieSpecialCheckBox)))
                            .addComponent(chiliCheckBox)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(existingStreetAddresLabel)
                                                        .addComponent(existingNameLabel))
                                                    .addGap(34, 34, 34))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(existingPostCodeLabel)
                                                    .addGap(59, 59, 59)))
                                            .addComponent(existingMobileNumLabel))
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(existingMobileNumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(existingNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                                                .addComponent(existingAddressTextField)
                                                .addComponent(existingPostCodeTextField)))))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sizeLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(sizeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pizzaTypeLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pizzaTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(loadButton)
                        .addGap(124, 124, 124)
                        .addComponent(sumLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingNameLabel)
                    .addComponent(existingNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingStreetAddresLabel)
                    .addComponent(existingAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingPostCodeLabel)
                    .addComponent(existingPostCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingMobileNumLabel)
                    .addComponent(existingMobileNumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sizeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pizzaTypeLabel)
                            .addComponent(pizzaTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(noteLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bbqSauceLabel)
                    .addComponent(sauceRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(extraCheeseLabel)
                    .addComponent(cheeseRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(additionalFillingsLabel)
                    .addComponent(specialComboLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(beefCheckBox)
                    .addComponent(meatFeastCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chickenCheckBox)
                    .addComponent(veggieSpecialCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pepperoniCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mushroomsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sweetCornCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(peppersCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chiliCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadButton)
                    .addComponent(sumLabel)
                    .addComponent(sumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void existingNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_existingNameTextFieldActionPerformed

    private void existingPostCodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingPostCodeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_existingPostCodeTextFieldActionPerformed

    private void sizeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeComboBoxActionPerformed

    private void pizzaTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pizzaTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pizzaTypeComboBoxActionPerformed

    private void sauceRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sauceRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sauceRadioButtonActionPerformed

    private void cheeseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheeseRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cheeseRadioButtonActionPerformed

    private void beefCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beefCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_beefCheckBoxActionPerformed

    private void chickenCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chickenCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chickenCheckBoxActionPerformed

    private void pepperoniCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pepperoniCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pepperoniCheckBoxActionPerformed

    private void mushroomsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mushroomsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mushroomsCheckBoxActionPerformed

    private void sweetCornCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sweetCornCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sweetCornCheckBoxActionPerformed

    private void peppersCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peppersCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peppersCheckBoxActionPerformed

    private void chiliCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiliCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chiliCheckBoxActionPerformed

    private void meatFeastCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meatFeastCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_meatFeastCheckBoxActionPerformed

    private void veggieSpecialCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_veggieSpecialCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_veggieSpecialCheckBoxActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        // TODO add your handling code here:
        existingNameTextField.setText(CheckIfExistingCustomerForm.getInputName());  //get the name to be searched
        String data = "";
        try {
            File readFile = new File("newOrders.txt");
            Scanner reader = new Scanner(readFile);
            while (reader.hasNextLine()) {
                data = reader.nextLine();
                if (data.contains(CheckIfExistingCustomerForm.getInputName())) {
                    String[] splitParts = data.split(",");  //spplit the string if there's a ",".
                    String namePart = splitParts[0];
                    String addressPart = splitParts[1];
                    String postCodePart = splitParts[2];
                    String numberPart = splitParts[3];
                    String sizePart = splitParts[4];
                    String typePart = splitParts[5];
                    String saucePart = splitParts[6];
                    String cheesePart = splitParts[7];
                    String beefPart = splitParts[8];
                    String chickenPart = splitParts[9];
                    String pepperoniPart = splitParts[10];
                    String mushroomsPart = splitParts[11];
                    String sweetcornPart = splitParts[12];
                    String peppersPart = splitParts[13];
                    String chiliPart = splitParts[14];
                    String meatFeastPart = splitParts[15];
                    String veggiePart = splitParts[16];
                    String sumPart = splitParts[17];

                    existingAddressTextField.setText(addressPart);  //load different parts to the form
                    existingPostCodeTextField.setText(postCodePart);
                    existingMobileNumTextField.setText(numberPart);
                    if (sizePart.contains("Small")) {
                        sizeComboBox.setSelectedItem("Small");
                    } else if (sizePart.contains("Medium")) {
                        sizeComboBox.setSelectedItem("Medium");
                    } else {
                        sizeComboBox.setSelectedItem("Large");
                    }

                    if (typePart.contains("Thin Crust")) {
                        pizzaTypeComboBox.setSelectedItem("Thin Crust");
                    } else if (typePart.contains("Deep Pan")) {
                        pizzaTypeComboBox.setSelectedItem("Deep Pan");
                    }

                    if (saucePart.contains("true")) {
                        sauceRadioButton.setSelected(true);
                    } else {
                        sauceRadioButton.setSelected(false);
                    }
                    if (cheesePart.contains("true")) {
                        cheeseRadioButton.setSelected(true);
                    } else {
                        cheeseRadioButton.setSelected(false);
                    }
                    if (beefPart.contains("true")) {
                        beefCheckBox.setSelected(true);
                    } else {
                        beefCheckBox.setSelected(false);
                    }
                    if (chickenPart.contains("true")) {
                        chickenCheckBox.setSelected(true);
                    } else {
                        chickenCheckBox.setSelected(false);
                    }
                    if (pepperoniPart.contains("true")) {
                        pepperoniCheckBox.setSelected(true);
                    } else {
                        pepperoniCheckBox.setSelected(false);
                    }
                    if (mushroomsPart.contains("true")) {
                        mushroomsCheckBox.setSelected(true);
                    } else {
                        mushroomsCheckBox.setSelected(false);
                    }
                    if (sweetcornPart.contains("true")) {
                        sweetCornCheckBox.setSelected(true);
                    } else {
                        sweetCornCheckBox.setSelected(false);
                    }
                    if (peppersPart.contains("true")) {
                        peppersCheckBox.setSelected(true);
                    } else {
                        peppersCheckBox.setSelected(false);
                    }
                    if (chiliPart.contains("true")) {
                        chiliCheckBox.setSelected(true);
                    } else {
                        chiliCheckBox.setSelected(false);
                    }
                    if (meatFeastPart.contains("true")) {
                        meatFeastCheckBox.setSelected(true);
                    } else {
                        meatFeastCheckBox.setSelected(false);
                    }
                    if (veggiePart.contains("true")) {
                        veggieSpecialCheckBox.setSelected(true);
                    } else {
                        veggieSpecialCheckBox.setSelected(false);
                    }
                    sumTextField.setText(sumPart);
                    break;
                }
            }
            reader.close();
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, e.toString(), "Alert", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_loadButtonActionPerformed

    private void sumTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sumTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExistingCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExistingCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExistingCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExistingCustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExistingCustomerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel additionalFillingsLabel;
    private javax.swing.JLabel bbqSauceLabel;
    private javax.swing.JCheckBox beefCheckBox;
    private javax.swing.JRadioButton cheeseRadioButton;
    private javax.swing.JCheckBox chickenCheckBox;
    private javax.swing.JCheckBox chiliCheckBox;
    private javax.swing.JTextField existingAddressTextField;
    private javax.swing.JLabel existingMobileNumLabel;
    private javax.swing.JTextField existingMobileNumTextField;
    private javax.swing.JLabel existingNameLabel;
    private javax.swing.JTextField existingNameTextField;
    private javax.swing.JLabel existingPostCodeLabel;
    private javax.swing.JTextField existingPostCodeTextField;
    private javax.swing.JLabel existingStreetAddresLabel;
    private javax.swing.JLabel extraCheeseLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadButton;
    private javax.swing.JCheckBox meatFeastCheckBox;
    private javax.swing.JCheckBox mushroomsCheckBox;
    private javax.swing.JLabel noteLabel;
    private javax.swing.JCheckBox pepperoniCheckBox;
    private javax.swing.JCheckBox peppersCheckBox;
    private javax.swing.JComboBox<String> pizzaTypeComboBox;
    private javax.swing.JLabel pizzaTypeLabel;
    private javax.swing.JRadioButton sauceRadioButton;
    private javax.swing.JComboBox<String> sizeComboBox;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JTable sizeTable;
    private javax.swing.JLabel specialComboLabel;
    private javax.swing.JLabel sumLabel;
    private javax.swing.JTextField sumTextField;
    private javax.swing.JCheckBox sweetCornCheckBox;
    private javax.swing.JCheckBox veggieSpecialCheckBox;
    // End of variables declaration//GEN-END:variables
}
